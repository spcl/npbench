***** Testing NumPy with adi on the paper dataset *****
NumPy - default - first/validation: 1299ms
NumPy - default - median: 1307ms
***** Testing Numba with adi on the paper dataset *****
NumPy - default - validation: 1333ms
Numba - nopython-mode - first/validation: 2700ms
Numba - nopython-mode - validation: SUCCESS
Numba - nopython-mode - median: 79ms
Numba - nopython-mode-parallel - first/validation: 9137ms
Numba - nopython-mode-parallel - validation: SUCCESS
Numba - nopython-mode-parallel - median: 2990ms
***** Testing CuPy with adi on the paper dataset *****
NumPy - default - validation: 1079ms
CuPy - default - first/validation: 11208ms
CuPy - default - validation: SUCCESS
CuPy - default - median: 13062ms
***** Testing Pythran with adi on the paper dataset *****
NumPy - default - validation: 1070ms
Pythran compilation time: 10071ms
Pythran - default - first/validation: 107ms
Pythran - default - validation: SUCCESS
Pythran - default - median: 99ms
***** Testing DaCe CPU with adi on the paper dataset *****
NumPy - default - validation: 1081ms
DaCe CPU - fusion - first/validation: 1900ms
DaCe CPU - fusion - validation: SUCCESS
DaCe CPU - fusion - median: 1814ms
DaCe CPU - parallel - first/validation: 1846ms
DaCe CPU - parallel - validation: SUCCESS
DaCe CPU - parallel - median: 1855ms
DaCe CPU - auto_opt - first/validation: 1219ms
DaCe CPU - auto_opt - validation: SUCCESS
DaCe CPU - auto_opt - median: 1196ms
***** Testing NumPy with jacobi_1d on the paper dataset *****
NumPy - default - first/validation: 401ms
NumPy - default - median: 394ms
***** Testing Numba with jacobi_1d on the paper dataset *****
NumPy - default - validation: 411ms
Numba - nopython-mode - first/validation: 1212ms
Numba - nopython-mode - validation: SUCCESS
Numba - nopython-mode - median: 340ms
Numba - nopython-mode-parallel - first/validation: 1318ms
Numba - nopython-mode-parallel - validation: SUCCESS
Numba - nopython-mode-parallel - median: 154ms
***** Testing CuPy with jacobi_1d on the paper dataset *****
NumPy - default - validation: 422ms
CuPy - default - first/validation: 657ms
CuPy - default - validation: SUCCESS
CuPy - default - median: 538ms
***** Testing Pythran with jacobi_1d on the paper dataset *****
NumPy - default - validation: 414ms
Pythran compilation time: 3836ms
Pythran - default - first/validation: 238ms
Pythran - default - validation: SUCCESS
Pythran - default - median: 218ms
***** Testing DaCe CPU with jacobi_1d on the paper dataset *****
NumPy - default - validation: 395ms
DaCe CPU - fusion - first/validation: 106ms
DaCe CPU - fusion - validation: SUCCESS
DaCe CPU - fusion - median: 78ms
DaCe CPU - parallel - first/validation: 78ms
DaCe CPU - parallel - validation: SUCCESS
DaCe CPU - parallel - median: 77ms
DaCe CPU - auto_opt - first/validation: 77ms
DaCe CPU - auto_opt - validation: SUCCESS
DaCe CPU - auto_opt - median: 78ms
***** Testing NumPy with jacobi_2d on the paper dataset *****
NumPy - default - first/validation: 170416ms
NumPy - default - median: 168971ms
***** Testing Numba with jacobi_2d on the paper dataset *****
NumPy - default - validation: 171339ms
Numba - nopython-mode - first/validation: 196712ms
Numba - nopython-mode - validation: SUCCESS
Numba - nopython-mode - median: 193961ms
Numba - nopython-mode-parallel - first/validation: 18802ms
Numba - nopython-mode-parallel - validation: SUCCESS
Numba - nopython-mode-parallel - median: 16506ms
***** Testing CuPy with jacobi_2d on the paper dataset *****
NumPy - default - validation: 170377ms
CuPy - default - first/validation: 2431ms
CuPy - default - validation: SUCCESS
CuPy - default - median: 2320ms
***** Testing Pythran with jacobi_2d on the paper dataset *****
NumPy - default - validation: 168730ms
Pythran compilation time: 9130ms
Pythran - default - first/validation: 31689ms
Pythran - default - validation: SUCCESS
Pythran - default - median: 31569ms
***** Testing DaCe CPU with jacobi_2d on the paper dataset *****
NumPy - default - validation: 168995ms
DaCe CPU - fusion - first/validation: 2986ms
DaCe CPU - fusion - validation: SUCCESS
DaCe CPU - fusion - median: 2860ms
DaCe CPU - parallel - first/validation: 2858ms
DaCe CPU - parallel - validation: SUCCESS
DaCe CPU - parallel - median: 2856ms
DaCe CPU - auto_opt - first/validation: 2852ms
DaCe CPU - auto_opt - validation: SUCCESS
DaCe CPU - auto_opt - median: 2847ms
***** Testing NumPy with fdtd_2d on the paper dataset *****
NumPy - default - first/validation: 6757ms
NumPy - default - median: 6642ms
***** Testing Numba with fdtd_2d on the paper dataset *****
NumPy - default - validation: 6669ms
Numba - nopython-mode - first/validation: 11423ms
Numba - nopython-mode - validation: SUCCESS
Numba - nopython-mode - median: 9750ms
Numba - nopython-mode-parallel - first/validation: 4549ms
Numba - nopython-mode-parallel - validation: SUCCESS
Numba - nopython-mode-parallel - median: 1484ms
***** Testing CuPy with fdtd_2d on the paper dataset *****
NumPy - default - validation: 6644ms
CuPy - default - first/validation: 291ms
CuPy - default - validation: SUCCESS
CuPy - default - median: 174ms
***** Testing Pythran with fdtd_2d on the paper dataset *****
NumPy - default - validation: 6598ms
Pythran compilation time: 14451ms
Pythran - default - first/validation: 2172ms
Pythran - default - validation: SUCCESS
Pythran - default - median: 2104ms
***** Testing DaCe CPU with fdtd_2d on the paper dataset *****
NumPy - default - validation: 6577ms
DaCe CPU - fusion - first/validation: 254ms
DaCe CPU - fusion - validation: SUCCESS
DaCe CPU - fusion - median: 95ms
DaCe CPU - parallel - first/validation: 100ms
DaCe CPU - parallel - validation: SUCCESS
DaCe CPU - parallel - median: 105ms
DaCe CPU - auto_opt - first/validation: 115ms
DaCe CPU - auto_opt - validation: SUCCESS
DaCe CPU - auto_opt - median: 96ms
***** Testing NumPy with bicg on the paper dataset *****
NumPy - default - first/validation: 94ms
NumPy - default - median: 107ms
***** Testing Numba with bicg on the paper dataset *****
NumPy - default - validation: 96ms
Numba - nopython-mode - first/validation: 1196ms
Numba - nopython-mode - validation: SUCCESS
Numba - nopython-mode - median: 105ms
Numba - nopython-mode-parallel - first/validation: 429ms
Numba - nopython-mode-parallel - validation: SUCCESS
Numba - nopython-mode-parallel - median: 105ms
***** Testing CuPy with bicg on the paper dataset *****
NumPy - default - validation: 96ms
CuPy - default - first/validation: 612ms
CuPy - default - validation: SUCCESS
CuPy - default - median: 7ms
***** Testing Pythran with bicg on the paper dataset *****
NumPy - default - validation: 94ms
Pythran compilation time: 2927ms
Failed to load the Pythran implementation.
***** Testing DaCe CPU with bicg on the paper dataset *****
NumPy - default - validation: 93ms
DaCe CPU - fusion - first/validation: 780ms
DaCe CPU - fusion - validation: SUCCESS
DaCe CPU - fusion - median: 605ms
DaCe CPU - parallel - first/validation: 656ms
DaCe CPU - parallel - validation: SUCCESS
DaCe CPU - parallel - median: 620ms
DaCe CPU - auto_opt - first/validation: 607ms
DaCe CPU - auto_opt - validation: SUCCESS
DaCe CPU - auto_opt - median: 596ms
***** Testing NumPy with cavity_flow on the paper dataset *****
NumPy - default - first/validation: 3608ms
NumPy - default - median: 3604ms
***** Testing Numba with cavity_flow on the paper dataset *****
NumPy - default - validation: 3582ms
Numba - nopython-mode - first/validation: 7716ms
Numba - nopython-mode - validation: SUCCESS
Numba - nopython-mode - median: 3120ms
***** Testing CuPy with cavity_flow on the paper dataset *****
NumPy - default - validation: 3647ms
CuPy - default - first/validation: 10561ms
CuPy - default - validation: SUCCESS
CuPy - default - median: 12328ms
***** Testing Pythran with cavity_flow on the paper dataset *****
NumPy - default - validation: 3635ms
Pythran compilation time: 58662ms
Pythran - default - first/validation: 4672ms
Pythran - default - validation: SUCCESS
Pythran - default - median: 4633ms
***** Testing DaCe CPU with cavity_flow on the paper dataset *****
NumPy - default - validation: 3637ms
DaCe CPU - fusion - first/validation: 1563ms
DaCe CPU - fusion - validation: SUCCESS
DaCe CPU - fusion - median: 1485ms
DaCe CPU - parallel - first/validation: 1437ms
DaCe CPU - parallel - validation: SUCCESS
DaCe CPU - parallel - median: 1444ms
DaCe CPU - auto_opt - first/validation: 1486ms
DaCe CPU - auto_opt - validation: SUCCESS
DaCe CPU - auto_opt - median: 1489ms
***** Testing NumPy with cholesky on the paper dataset *****
NumPy - default - first/validation: 5925ms
NumPy - default - median: 5829ms
***** Testing Numba with cholesky on the paper dataset *****
NumPy - default - validation: 5750ms
Numba - nopython-mode - first/validation: 1049ms
Numba - nopython-mode - validation: SUCCESS
Numba - nopython-mode - median: 545ms
Numba - nopython-mode-parallel-range - first/validation: 1743ms
Numba - nopython-mode-parallel-range - validation: SUCCESS
Numba - nopython-mode-parallel-range - median: 557ms
***** Testing CuPy with cholesky on the paper dataset *****
NumPy - default - validation: 5843ms
CuPy - default - first/validation: 107006ms
CuPy - default - validation: SUCCESS
CuPy - default - median: 105704ms
***** Testing Pythran with cholesky on the paper dataset *****
NumPy - default - validation: 5944ms
Pythran compilation time: 3310ms
Pythran - default - first/validation: 490ms
Pythran - default - validation: SUCCESS
Pythran - default - median: 487ms
***** Testing DaCe CPU with cholesky on the paper dataset *****
NumPy - default - validation: 5797ms
DaCe CPU - fusion - first/validation: 146633ms
DaCe CPU - fusion - validation: SUCCESS
DaCe CPU - fusion - median: 147252ms
DaCe CPU - parallel - first/validation: 147300ms
DaCe CPU - parallel - validation: SUCCESS
DaCe CPU - parallel - median: 150576ms
DaCe CPU - auto_opt - first/validation: 110016ms
DaCe CPU - auto_opt - validation: SUCCESS
DaCe CPU - auto_opt - median: 115607ms
***** Testing NumPy with nbody on the paper dataset *****
NumPy - default - first/validation: 560ms
NumPy - default - median: 547ms
***** Testing Numba with nbody on the paper dataset *****
NumPy - default - validation: 571ms
Numba - object-mode - first/validation: 2544ms
Numba - object-mode - validation: SUCCESS
Numba - object-mode - median: 585ms
Numba - object-mode-parallel - first/validation: 2352ms
Numba - object-mode-parallel - validation: SUCCESS
Numba - object-mode-parallel - median: 581ms
Numba - nopython-mode - first/validation: 11258ms
Numba - nopython-mode - validation: SUCCESS
Numba - nopython-mode - median: 236ms
***** Testing CuPy with nbody on the paper dataset *****
NumPy - default - validation: 558ms
CuPy - default - first/validation: 2336ms
CuPy - default - validation: SUCCESS
CuPy - default - median: 1567ms
***** Testing Pythran with nbody on the paper dataset *****
NumPy - default - validation: 563ms
Pythran compilation time: 8530ms
Failed to load the Pythran implementation.
***** Testing DaCe CPU with nbody on the paper dataset *****
NumPy - default - validation: 565ms
DaCe CPU - fusion - first/validation: 616ms
DaCe CPU - fusion - validation: SUCCESS
DaCe CPU - fusion - median: 530ms
DaCe CPU - parallel - first/validation: 440ms
DaCe CPU - parallel - validation: SUCCESS
DaCe CPU - parallel - median: 504ms
DaCe CPU - auto_opt - first/validation: 321ms
DaCe CPU - auto_opt - validation: SUCCESS
DaCe CPU - auto_opt - median: 272ms
***** Testing NumPy with channel_flow on the paper dataset *****
NumPy - default - first/validation: 6533ms
NumPy - default - median: 6512ms
***** Testing Numba with channel_flow on the paper dataset *****
NumPy - default - validation: 6493ms
Numba - nopython-mode - first/validation: 14988ms
Numba - nopython-mode - validation: SUCCESS
Numba - nopython-mode - median: 4002ms
Numba - nopython-mode-parallel - first/validation: 30908ms
Numba - nopython-mode-parallel - validation: SUCCESS
Numba - nopython-mode-parallel - median: 7661ms
***** Testing CuPy with channel_flow on the paper dataset *****
NumPy - default - validation: 6503ms
CuPy - default - first/validation: 30960ms
CuPy - default - validation: SUCCESS
CuPy - default - median: 30948ms
***** Testing Pythran with channel_flow on the paper dataset *****
NumPy - default - validation: 6551ms
Pythran compilation time: 101973ms
Pythran - default - first/validation: 6847ms
Pythran - default - validation: SUCCESS
Pythran - default - median: 6704ms
***** Testing DaCe CPU with channel_flow on the paper dataset *****
NumPy - default - validation: 6500ms
DaCe CPU - fusion - first/validation: 5506ms
DaCe CPU - fusion - validation: SUCCESS
DaCe CPU - fusion - median: 5366ms
DaCe CPU - parallel - first/validation: 5226ms
DaCe CPU - parallel - validation: SUCCESS
DaCe CPU - parallel - median: 5379ms
DaCe CPU - auto_opt - first/validation: 4765ms
DaCe CPU - auto_opt - validation: SUCCESS
DaCe CPU - auto_opt - median: 4671ms
***** Testing NumPy with covariance on the paper dataset *****
NumPy - default - first/validation: 135ms
NumPy - default - median: 125ms
***** Testing Numba with covariance on the paper dataset *****
NumPy - default - validation: 135ms
Numba - object-mode - first/validation: 3606ms
Numba - object-mode - validation: SUCCESS
Numba - object-mode - median: 1818ms
Numba - object-mode-parallel - first/validation: 11089ms
Numba - object-mode-parallel - validation: SUCCESS
Numba - object-mode-parallel - median: 12224ms
Numba - object-mode-parallel-range - first/validation: 873ms
Numba - object-mode-parallel-range - validation: SUCCESS
Numba - object-mode-parallel-range - median: 130ms
Numba - nopython-mode - first/validation: 3407ms
Numba - nopython-mode - validation: SUCCESS
Numba - nopython-mode - median: 1700ms
Failed to execute the Numba - nopython-mode-parallel implementation.
Failed in nopython mode pipeline (step: native parfor lowering)
[1mFailed in full_parfor_gufunc mode pipeline (step: nopython frontend)
[1m[1mNo implementation of function Function(<built-in function getitem>) found for signature:
 
 >>> getitem(array(float64, 1d, C), UniTuple(uint64 x 2))
 
There are 22 candidate implementations:
[1m  - Of which 20 did not match due to:
  Overload of function 'getitem': File: <numerous>: Line N/A.
    With argument(s): '(array(float64, 1d, C), UniTuple(uint64 x 2))':[0m
[1m   No match.[0m
[1m  - Of which 2 did not match due to:
  Overload in function 'GetItemBuffer.generic': File: numba/core/typing/arraydecl.py: Line 211.
    With argument(s): '(array(float64, 1d, C), UniTuple(uint64 x 2))':[0m
[1m   Rejected as the implementation raised a specific error:
     NumbaTypeError: [1mcannot index array(float64, 1d, C) with 2 indices: UniTuple(uint64 x 2)[0m[0m
  raised from /home/ubuntu/.local/lib/python3.10/site-packages/numba/core/typing/arraydecl.py:133
[0m
[0m[1mDuring: typing of intrinsic-call at /home/ubuntu/npbgpu/npb-lrz/npbench/benchmarks/polybench/covariance/covariance_numba_np.py (10)[0m
[1m
File "npbench/benchmarks/polybench/covariance/covariance_numba_np.py", line 10:[0m
[1mdef kernel(M, float_n, data):
    <source elided>
    mean = np.sum(data, axis=0) / float_n
[1m    data -= mean
[0m    [1m^[0m[0m

[0m[1mDuring: lowering "id=10[LoopNest(index_variable = parfor_index.397, range = (0, data_size0.325, 1)), LoopNest(index_variable = parfor_index.398, range = (0, data_size1.326, 1))]{225: <ir.Block at /home/ubuntu/npbgpu/npb-lrz/npbench/benchmarks/polybench/covariance/covariance_numba_np.py (10)>}Var($parfor_index_tuple_var.399, covariance_numba_np.py:10)" at /home/ubuntu/npbgpu/npb-lrz/npbench/benchmarks/polybench/covariance/covariance_numba_np.py (10)[0m
Failed to run Numba validation.
Failed to execute the Numba - nopython-mode-parallel implementation.
Failed in nopython mode pipeline (step: native parfor lowering)
[1mFailed in full_parfor_gufunc mode pipeline (step: nopython frontend)
[1m[1mNo implementation of function Function(<built-in function getitem>) found for signature:
 
 >>> getitem(array(float64, 1d, C), UniTuple(uint64 x 2))
 
There are 22 candidate implementations:
[1m  - Of which 20 did not match due to:
  Overload of function 'getitem': File: <numerous>: Line N/A.
    With argument(s): '(array(float64, 1d, C), UniTuple(uint64 x 2))':[0m
[1m   No match.[0m
[1m  - Of which 2 did not match due to:
  Overload in function 'GetItemBuffer.generic': File: numba/core/typing/arraydecl.py: Line 211.
    With argument(s): '(array(float64, 1d, C), UniTuple(uint64 x 2))':[0m
[1m   Rejected as the implementation raised a specific error:
     NumbaTypeError: [1mcannot index array(float64, 1d, C) with 2 indices: UniTuple(uint64 x 2)[0m[0m
  raised from /home/ubuntu/.local/lib/python3.10/site-packages/numba/core/typing/arraydecl.py:133
[0m
[0m[1mDuring: typing of intrinsic-call at /home/ubuntu/npbgpu/npb-lrz/npbench/benchmarks/polybench/covariance/covariance_numba_np.py (10)[0m
[1m
File "npbench/benchmarks/polybench/covariance/covariance_numba_np.py", line 10:[0m
[1mdef kernel(M, float_n, data):
    <source elided>
    mean = np.sum(data, axis=0) / float_n
[1m    data -= mean
[0m    [1m^[0m[0m

[0m[1mDuring: lowering "id=10[LoopNest(index_variable = parfor_index.397, range = (0, data_size0.325, 1)), LoopNest(index_variable = parfor_index.398, range = (0, data_size1.326, 1))]{225: <ir.Block at /home/ubuntu/npbgpu/npb-lrz/npbench/benchmarks/polybench/covariance/covariance_numba_np.py (10)>}Var($parfor_index_tuple_var.399, covariance_numba_np.py:10)" at /home/ubuntu/npbgpu/npb-lrz/npbench/benchmarks/polybench/covariance/covariance_numba_np.py (10)[0m
Failed to execute the Numba - nopython-mode-parallel-range implementation.
Failed in nopython mode pipeline (step: native parfor lowering)
[1mFailed in full_parfor_gufunc mode pipeline (step: nopython frontend)
[1m[1mNo implementation of function Function(<built-in function getitem>) found for signature:
 
 >>> getitem(array(float64, 1d, C), UniTuple(uint64 x 2))
 
There are 22 candidate implementations:
[1m    - Of which 20 did not match due to:
    Overload of function 'getitem': File: <numerous>: Line N/A.
      With argument(s): '(array(float64, 1d, C), UniTuple(uint64 x 2))':[0m
[1m     No match.[0m
[1m    - Of which 2 did not match due to:
    Overload in function 'GetItemBuffer.generic': File: numba/core/typing/arraydecl.py: Line 211.
      With argument(s): '(array(float64, 1d, C), UniTuple(uint64 x 2))':[0m
[1m     Rejected as the implementation raised a specific error:
       NumbaTypeError: [1mcannot index array(float64, 1d, C) with 2 indices: UniTuple(uint64 x 2)[0m[0m
  raised from /home/ubuntu/.local/lib/python3.10/site-packages/numba/core/typing/arraydecl.py:133
[0m
[0m[1mDuring: typing of intrinsic-call at /home/ubuntu/npbgpu/npb-lrz/npbench/benchmarks/polybench/covariance/covariance_numba_npr.py (10)[0m
[1m
File "npbench/benchmarks/polybench/covariance/covariance_numba_npr.py", line 10:[0m
[1mdef kernel(M, float_n, data):
    <source elided>
    mean = np.sum(data, axis=0) / float_n
[1m    data -= mean
[0m    [1m^[0m[0m

[0m[1mDuring: lowering "id=17[LoopNest(index_variable = parfor_index.672, range = (0, data_size0.595, 1)), LoopNest(index_variable = parfor_index.673, range = (0, data_size1.596, 1))]{271: <ir.Block at /home/ubuntu/npbgpu/npb-lrz/npbench/benchmarks/polybench/covariance/covariance_numba_npr.py (10)>}Var($parfor_index_tuple_var.674, covariance_numba_npr.py:10)" at /home/ubuntu/npbgpu/npb-lrz/npbench/benchmarks/polybench/covariance/covariance_numba_npr.py (10)[0m
Failed to run Numba validation.
Failed to execute the Numba - nopython-mode-parallel-range implementation.
Failed in nopython mode pipeline (step: native parfor lowering)
[1mFailed in full_parfor_gufunc mode pipeline (step: nopython frontend)
[1m[1mNo implementation of function Function(<built-in function getitem>) found for signature:
 
 >>> getitem(array(float64, 1d, C), UniTuple(uint64 x 2))
 
There are 22 candidate implementations:
[1m    - Of which 20 did not match due to:
    Overload of function 'getitem': File: <numerous>: Line N/A.
      With argument(s): '(array(float64, 1d, C), UniTuple(uint64 x 2))':[0m
[1m     No match.[0m
[1m    - Of which 2 did not match due to:
    Overload in function 'GetItemBuffer.generic': File: numba/core/typing/arraydecl.py: Line 211.
      With argument(s): '(array(float64, 1d, C), UniTuple(uint64 x 2))':[0m
[1m     Rejected as the implementation raised a specific error:
       NumbaTypeError: [1mcannot index array(float64, 1d, C) with 2 indices: UniTuple(uint64 x 2)[0m[0m
  raised from /home/ubuntu/.local/lib/python3.10/site-packages/numba/core/typing/arraydecl.py:133
[0m
[0m[1mDuring: typing of intrinsic-call at /home/ubuntu/npbgpu/npb-lrz/npbench/benchmarks/polybench/covariance/covariance_numba_npr.py (10)[0m
[1m
File "npbench/benchmarks/polybench/covariance/covariance_numba_npr.py", line 10:[0m
[1mdef kernel(M, float_n, data):
    <source elided>
    mean = np.sum(data, axis=0) / float_n
[1m    data -= mean
[0m    [1m^[0m[0m

[0m[1mDuring: lowering "id=17[LoopNest(index_variable = parfor_index.672, range = (0, data_size0.595, 1)), LoopNest(index_variable = parfor_index.673, range = (0, data_size1.596, 1))]{271: <ir.Block at /home/ubuntu/npbgpu/npb-lrz/npbench/benchmarks/polybench/covariance/covariance_numba_npr.py (10)>}Var($parfor_index_tuple_var.674, covariance_numba_npr.py:10)" at /home/ubuntu/npbgpu/npb-lrz/npbench/benchmarks/polybench/covariance/covariance_numba_npr.py (10)[0m
***** Testing CuPy with covariance on the paper dataset *****
NumPy - default - validation: 136ms
CuPy - default - first/validation: 882ms
CuPy - default - validation: SUCCESS
CuPy - default - median: 165ms
***** Testing Pythran with covariance on the paper dataset *****
NumPy - default - validation: 135ms
Pythran compilation time: 4478ms
Failed to load the Pythran implementation.
***** Testing DaCe CPU with covariance on the paper dataset *****
NumPy - default - validation: 142ms
DaCe CPU - fusion - first/validation: 899ms
DaCe CPU - fusion - validation: SUCCESS
DaCe CPU - fusion - median: 757ms
DaCe CPU - parallel - first/validation: 772ms
DaCe CPU - parallel - validation: SUCCESS
DaCe CPU - parallel - median: 756ms
DaCe CPU - auto_opt - first/validation: 772ms
DaCe CPU - auto_opt - validation: SUCCESS
DaCe CPU - auto_opt - median: 753ms
***** Testing NumPy with gemm on the paper dataset *****
NumPy - default - first/validation: 90ms
NumPy - default - median: 80ms
***** Testing Numba with gemm on the paper dataset *****
NumPy - default - validation: 90ms
Numba - nopython-mode - first/validation: 1356ms
Numba - nopython-mode - validation: SUCCESS
Numba - nopython-mode - median: 148ms
Numba - nopython-mode-parallel - first/validation: 1395ms
Numba - nopython-mode-parallel - validation: SUCCESS
Numba - nopython-mode-parallel - median: 112ms
***** Testing CuPy with gemm on the paper dataset *****
NumPy - default - validation: 91ms
CuPy - default - first/validation: 706ms
CuPy - default - validation: SUCCESS
CuPy - default - median: 4ms
***** Testing Pythran with gemm on the paper dataset *****
NumPy - default - validation: 90ms
Pythran compilation time: 5984ms
Failed to load the Pythran implementation.
***** Testing DaCe CPU with gemm on the paper dataset *****
NumPy - default - validation: 91ms
DaCe CPU - fusion - first/validation: 8271ms
DaCe CPU - fusion - validation: SUCCESS
DaCe CPU - fusion - median: 8090ms
DaCe CPU - parallel - first/validation: 8120ms
DaCe CPU - parallel - validation: SUCCESS
DaCe CPU - parallel - median: 8063ms
DaCe CPU - auto_opt - first/validation: 8038ms
DaCe CPU - auto_opt - validation: SUCCESS
DaCe CPU - auto_opt - median: 8074ms
***** Testing NumPy with conv2d_bias on the paper dataset *****
NumPy - default - first/validation: 27178ms
NumPy - default - median: 27500ms
***** Testing Numba with conv2d_bias on the paper dataset *****
NumPy - default - validation: 28544ms
Failed to execute the Numba - object-mode implementation.
No definition for lowering <function sum at 0x7fbabb90c550>(Array(float32, 5, 'C', False, aligned=True), Tuple((Literal[int](1), Literal[int](2), Literal[int](3)))) -> array(float32, 4d, C)
Failed to run Numba validation.
Failed to execute the Numba - object-mode implementation.
No definition for lowering <function sum at 0x7fbabb90c550>(Array(float32, 5, 'C', False, aligned=True), Tuple((Literal[int](1), Literal[int](2), Literal[int](3)))) -> array(float32, 4d, C)
Failed to execute the Numba - object-mode-parallel implementation.
No definition for lowering <function sum at 0x7fbabb90c550>(Array(float32, 5, 'C', False, aligned=True), Tuple((Literal[int](1), Literal[int](2), Literal[int](3)))) -> array(float32, 4d, C)
Failed to run Numba validation.
Failed to execute the Numba - object-mode-parallel implementation.
No definition for lowering <function sum at 0x7fbabb90c550>(Array(float32, 5, 'C', False, aligned=True), UniTuple(int64, 3)) -> array(float32, 4d, C)
Numba - object-mode-parallel-range - first/validation: 30701ms
Numba - object-mode-parallel-range - validation: SUCCESS
Numba - object-mode-parallel-range - median: 25663ms
Numba - nopython-mode - first/validation: 89649ms
Numba - nopython-mode - validation: SUCCESS
Numba - nopython-mode - median: 81272ms
Numba - nopython-mode-parallel - first/validation: 45584ms
Numba - nopython-mode-parallel - validation: SUCCESS
Numba - nopython-mode-parallel - median: 36537ms
Numba - nopython-mode-parallel-range - first/validation: 30779ms
Numba - nopython-mode-parallel-range - validation: SUCCESS
Numba - nopython-mode-parallel-range - median: 1909ms
***** Testing CuPy with conv2d_bias on the paper dataset *****
NumPy - default - validation: 27983ms
CuPy - default - first/validation: 3333ms
CuPy - default - validation: SUCCESS
CuPy - default - median: 3224ms
***** Testing Pythran with conv2d_bias on the paper dataset *****
NumPy - default - validation: 27664ms
Pythran compilation time: 7644ms
Pythran - default - first/validation: 15421ms
Pythran - default - validation: SUCCESS
Pythran - default - median: 15526ms
***** Testing DaCe CPU with conv2d_bias on the paper dataset *****
NumPy - default - validation: 27964ms
DaCe CPU - fusion - first/validation: 15668ms
DaCe CPU - fusion - validation: SUCCESS
DaCe CPU - fusion - median: 15443ms
DaCe CPU - parallel - first/validation: 15484ms
DaCe CPU - parallel - validation: SUCCESS
DaCe CPU - parallel - median: 15408ms
DaCe CPU - auto_opt - first/validation: 15263ms
DaCe CPU - auto_opt - validation: SUCCESS
DaCe CPU - auto_opt - median: 15276ms
***** Testing NumPy with softmax on the paper dataset *****
NumPy - default - first/validation: 1846ms
NumPy - default - median: 1838ms
***** Testing Numba with softmax on the paper dataset *****
NumPy - default - validation: 1847ms
Numba - object-mode - first/validation: 2137ms
Numba - object-mode - validation: SUCCESS
Numba - object-mode - median: 1839ms
Numba - object-mode-parallel - first/validation: 1923ms
Numba - object-mode-parallel - validation: SUCCESS
Numba - object-mode-parallel - median: 1838ms
Numba - nopython-mode - first/validation: 12694ms
Numba - nopython-mode - validation: SUCCESS
Numba - nopython-mode - median: 10081ms
Numba - nopython-mode-parallel - first/validation: 9986ms
Numba - nopython-mode-parallel - validation: SUCCESS
Numba - nopython-mode-parallel - median: 6571ms
Numba - nopython-mode-parallel-range - first/validation: 9192ms
Numba - nopython-mode-parallel-range - validation: SUCCESS
Numba - nopython-mode-parallel-range - median: 5856ms
***** Testing CuPy with softmax on the paper dataset *****
NumPy - default - validation: 1849ms
CuPy - default - first/validation: 129ms
CuPy - default - validation: SUCCESS
Failed to execute the CuPy - default implementation.
Out of memory allocating 1,073,741,824 bytes (allocated so far: 16,108,224,512 bytes).
***** Testing Pythran with softmax on the paper dataset *****
NumPy - default - validation: 1847ms
Pythran compilation time: 7939ms
Pythran - default - first/validation: 3314ms
Pythran - default - validation: SUCCESS
Pythran - default - median: 3332ms
***** Testing DaCe CPU with softmax on the paper dataset *****
NumPy - default - validation: 1841ms
DaCe CPU - fusion - first/validation: 108033ms
DaCe CPU - fusion - validation: SUCCESS
DaCe CPU - fusion - median: 105968ms
DaCe CPU - parallel - first/validation: 106354ms
DaCe CPU - parallel - validation: SUCCESS
DaCe CPU - parallel - median: 107395ms
DaCe CPU - auto_opt - first/validation: 111911ms
DaCe CPU - auto_opt - validation: SUCCESS
DaCe CPU - auto_opt - median: 102957ms
***** Testing NumPy with k2mm on the paper dataset *****
NumPy - default - first/validation: 465ms
NumPy - default - median: 372ms
***** Testing Numba with k2mm on the paper dataset *****
NumPy - default - validation: 437ms
Numba - nopython-mode - first/validation: 1838ms
Numba - nopython-mode - validation: SUCCESS
Numba - nopython-mode - median: 562ms
Numba - nopython-mode-parallel - first/validation: 1729ms
Numba - nopython-mode-parallel - validation: SUCCESS
Numba - nopython-mode-parallel - median: 447ms
***** Testing CuPy with k2mm on the paper dataset *****
NumPy - default - validation: 501ms
CuPy - default - first/validation: 745ms
CuPy - default - validation: SUCCESS
CuPy - default - median: 33ms
***** Testing Pythran with k2mm on the paper dataset *****
NumPy - default - validation: 444ms
Pythran compilation time: 6672ms
Failed to load the Pythran implementation.
***** Testing DaCe CPU with k2mm on the paper dataset *****
NumPy - default - validation: 422ms
DaCe CPU - fusion - first/validation: 68056ms
DaCe CPU - fusion - validation: SUCCESS
DaCe CPU - fusion - median: 68068ms
DaCe CPU - parallel - first/validation: 71126ms
DaCe CPU - parallel - validation: SUCCESS
DaCe CPU - parallel - median: 69205ms
DaCe CPU - auto_opt - first/validation: 70093ms
DaCe CPU - auto_opt - validation: SUCCESS
DaCe CPU - auto_opt - median: 69454ms
***** Testing NumPy with atax on the paper dataset *****
NumPy - default - first/validation: 100ms
NumPy - default - median: 109ms
***** Testing Numba with atax on the paper dataset *****
NumPy - default - validation: 96ms
Numba - nopython-mode - first/validation: 1211ms
Numba - nopython-mode - validation: SUCCESS
Numba - nopython-mode - median: 108ms
Numba - nopython-mode-parallel - first/validation: 442ms
Numba - nopython-mode-parallel - validation: SUCCESS
Numba - nopython-mode-parallel - median: 107ms
***** Testing CuPy with atax on the paper dataset *****
NumPy - default - validation: 90ms
CuPy - default - first/validation: 631ms
CuPy - default - validation: SUCCESS
CuPy - default - median: 8ms
***** Testing Pythran with atax on the paper dataset *****
NumPy - default - validation: 95ms
Pythran compilation time: 2855ms
Failed to load the Pythran implementation.
***** Testing DaCe CPU with atax on the paper dataset *****
NumPy - default - validation: 89ms
DaCe CPU - fusion - first/validation: 792ms
DaCe CPU - fusion - validation: SUCCESS
DaCe CPU - fusion - median: 639ms
DaCe CPU - parallel - first/validation: 639ms
DaCe CPU - parallel - validation: SUCCESS
DaCe CPU - parallel - median: 609ms
DaCe CPU - auto_opt - first/validation: 618ms
DaCe CPU - auto_opt - validation: SUCCESS
DaCe CPU - auto_opt - median: 633ms
***** Testing NumPy with crc16 on the paper dataset *****
NumPy - default - first/validation: 3903ms
NumPy - default - median: 3755ms
***** Testing Numba with crc16 on the paper dataset *****
NumPy - default - validation: 4063ms
Numba - nopython-mode - first/validation: 325ms
Numba - nopython-mode - validation: SUCCESS
Numba - nopython-mode - median: 9ms
Numba - nopython-mode-parallel - first/validation: 148ms
Numba - nopython-mode-parallel - validation: SUCCESS
Numba - nopython-mode-parallel - median: 9ms
***** Testing CuPy with crc16 on the paper dataset *****
NumPy - default - validation: 3970ms
Implementation "default" timed out.
***** Testing Pythran with crc16 on the paper dataset *****
NumPy - default - validation: 3984ms
Pythran compilation time: 2568ms
Pythran - default - first/validation: 21ms
Pythran - default - validation: SUCCESS
Pythran - default - median: 9ms
***** Testing DaCe CPU with crc16 on the paper dataset *****
NumPy - default - validation: 3980ms
DaCe CPU - fusion - first/validation: 16ms
DaCe CPU - fusion - validation: SUCCESS
DaCe CPU - fusion - median: 9ms
DaCe CPU - parallel - first/validation: 9ms
DaCe CPU - parallel - validation: SUCCESS
DaCe CPU - parallel - median: 9ms
DaCe CPU - auto_opt - first/validation: 40ms
DaCe CPU - auto_opt - validation: SUCCESS
DaCe CPU - auto_opt - median: 39ms
***** Testing NumPy with mandelbrot1 on the paper dataset *****
NumPy - default - first/validation: 1353ms
NumPy - default - median: 1333ms
***** Testing Numba with mandelbrot1 on the paper dataset *****
NumPy - default - validation: 1358ms
Numba - object-mode - first/validation: 2467ms
Numba - object-mode - validation: SUCCESS
Numba - object-mode - median: 1448ms
Numba - object-mode-parallel - first/validation: 2203ms
Numba - object-mode-parallel - validation: SUCCESS
Numba - object-mode-parallel - median: 1430ms
Numba - nopython-mode - first/validation: 3380ms
Numba - nopython-mode - validation: SUCCESS
Numba - nopython-mode - median: 2111ms
Numba - nopython-mode-parallel - first/validation: 2355ms
Numba - nopython-mode-parallel - validation: SUCCESS
Numba - nopython-mode-parallel - median: 485ms
Numba - nopython-mode-parallel-range - first/validation: 2436ms
Numba - nopython-mode-parallel-range - validation: SUCCESS
Numba - nopython-mode-parallel-range - median: 147ms
***** Testing CuPy with mandelbrot1 on the paper dataset *****
NumPy - default - validation: 1388ms
CuPy - default - first/validation: 271ms
CuPy - default - validation: SUCCESS
CuPy - default - median: 143ms
***** Testing Pythran with mandelbrot1 on the paper dataset *****
NumPy - default - validation: 1373ms
Pythran compilation time: 5128ms
Pythran - default - first/validation: 2911ms
Relative error: 0.0019988406913454882
Pythran did not validate!
Pythran - default - median: 2853ms
***** Testing DaCe CPU with mandelbrot1 on the paper dataset *****
NumPy - default - validation: 1382ms
DaCe CPU - fusion - first/validation: 86ms
DaCe CPU - fusion - validation: SUCCESS
DaCe CPU - fusion - median: 50ms
DaCe CPU - parallel - first/validation: 80ms
DaCe CPU - parallel - validation: SUCCESS
DaCe CPU - parallel - median: 50ms
DaCe CPU - auto_opt - first/validation: 70ms
DaCe CPU - auto_opt - validation: SUCCESS
DaCe CPU - auto_opt - median: 58ms
***** Testing NumPy with seidel_2d on the paper dataset *****
NumPy - default - first/validation: 15272ms
NumPy - default - median: 15158ms
***** Testing Numba with seidel_2d on the paper dataset *****
NumPy - default - validation: 15381ms
Numba - nopython-mode - first/validation: 959ms
Numba - nopython-mode - validation: SUCCESS
Numba - nopython-mode - median: 120ms
Numba - nopython-mode-parallel - first/validation: 2107ms
Numba - nopython-mode-parallel - validation: SUCCESS
Numba - nopython-mode-parallel - median: 1117ms
***** Testing CuPy with seidel_2d on the paper dataset *****
NumPy - default - validation: 15154ms
Implementation "default" timed out.
***** Testing Pythran with seidel_2d on the paper dataset *****
NumPy - default - validation: 15373ms
Pythran compilation time: 5879ms
Pythran - default - first/validation: 238ms
Pythran - default - validation: SUCCESS
Pythran - default - median: 229ms
***** Testing DaCe CPU with seidel_2d on the paper dataset *****
NumPy - default - validation: 15449ms
DaCe CPU - fusion - first/validation: 715ms
DaCe CPU - fusion - validation: SUCCESS
DaCe CPU - fusion - median: 644ms
DaCe CPU - parallel - first/validation: 646ms
DaCe CPU - parallel - validation: SUCCESS
DaCe CPU - parallel - median: 646ms
DaCe CPU - auto_opt - first/validation: 631ms
DaCe CPU - auto_opt - validation: SUCCESS
DaCe CPU - auto_opt - median: 641ms
***** Testing NumPy with hdiff on the paper dataset *****
NumPy - default - first/validation: 516ms
NumPy - default - median: 506ms
***** Testing Numba with hdiff on the paper dataset *****
NumPy - default - validation: 520ms
Numba - nopython-mode - first/validation: 5017ms
Numba - nopython-mode - validation: SUCCESS
Numba - nopython-mode - median: 791ms
Numba - nopython-mode-parallel - first/validation: 4295ms
Numba - nopython-mode-parallel - validation: SUCCESS
Numba - nopython-mode-parallel - median: 305ms
***** Testing CuPy with hdiff on the paper dataset *****
NumPy - default - validation: 524ms
CuPy - default - first/validation: 118ms
CuPy - default - validation: SUCCESS
CuPy - default - median: 5ms
***** Testing Pythran with hdiff on the paper dataset *****
NumPy - default - validation: 521ms
Pythran compilation time: 11408ms
Pythran - default - first/validation: 411ms
Pythran - default - validation: SUCCESS
Pythran - default - median: 406ms
***** Testing DaCe CPU with hdiff on the paper dataset *****
NumPy - default - validation: 519ms
DaCe CPU - fusion - first/validation: 116ms
DaCe CPU - fusion - validation: SUCCESS
DaCe CPU - fusion - median: 77ms
DaCe CPU - parallel - first/validation: 55ms
DaCe CPU - parallel - validation: SUCCESS
DaCe CPU - parallel - median: 54ms
DaCe CPU - auto_opt - first/validation: 28ms
DaCe CPU - auto_opt - validation: SUCCESS
DaCe CPU - auto_opt - median: 15ms
***** Testing NumPy with vadv on the paper dataset *****
NumPy - default - first/validation: 2346ms
NumPy - default - median: 2334ms
***** Testing Numba with vadv on the paper dataset *****
NumPy - default - validation: 2300ms
Numba - nopython-mode - first/validation: 13264ms
Numba - nopython-mode - validation: SUCCESS
Numba - nopython-mode - median: 2482ms
Numba - nopython-mode-parallel - first/validation: 12121ms
Numba - nopython-mode-parallel - validation: SUCCESS
Numba - nopython-mode-parallel - median: 181ms
***** Testing CuPy with vadv on the paper dataset *****
NumPy - default - validation: 2370ms
CuPy - default - first/validation: 206ms
CuPy - default - validation: SUCCESS
CuPy - default - median: 86ms
***** Testing Pythran with vadv on the paper dataset *****
NumPy - default - validation: 2380ms
Pythran compilation time: 23134ms
Pythran - default - first/validation: 2446ms
Pythran - default - validation: SUCCESS
Pythran - default - median: 2399ms
***** Testing DaCe CPU with vadv on the paper dataset *****
NumPy - default - validation: 2314ms
WARNING: MoveLoopIntoMap::can_be_applied triggered a AttributeError exception: 'NoneType' object has no attribute 'covers'
WARNING: MoveLoopIntoMap::can_be_applied triggered a AttributeError exception: 'NoneType' object has no attribute 'covers'
DaCe CPU - fusion - first/validation: 868ms
DaCe CPU - fusion - validation: SUCCESS
DaCe CPU - fusion - median: 730ms
DaCe CPU - parallel - first/validation: 727ms
DaCe CPU - parallel - validation: SUCCESS
DaCe CPU - parallel - median: 726ms
DaCe CPU - auto_opt - first/validation: 691ms
DaCe CPU - auto_opt - validation: SUCCESS
DaCe CPU - auto_opt - median: 676ms
***** Testing NumPy with heat_3d on the paper dataset *****
NumPy - default - first/validation: 49312ms
NumPy - default - median: 49548ms
***** Testing Numba with heat_3d on the paper dataset *****
NumPy - default - validation: 48890ms
Numba - nopython-mode - first/validation: 37952ms
Numba - nopython-mode - validation: SUCCESS
Numba - nopython-mode - median: 35865ms
Numba - nopython-mode-parallel - first/validation: 4528ms
Numba - nopython-mode-parallel - validation: SUCCESS
Numba - nopython-mode-parallel - median: 957ms
***** Testing CuPy with heat_3d on the paper dataset *****
NumPy - default - validation: 49552ms
CuPy - default - first/validation: 819ms
CuPy - default - validation: SUCCESS
CuPy - default - median: 708ms
***** Testing Pythran with heat_3d on the paper dataset *****
NumPy - default - validation: 49456ms
Pythran compilation time: 10257ms
Pythran - default - first/validation: 18023ms
Pythran - default - validation: SUCCESS
Pythran - default - median: 18010ms
***** Testing DaCe CPU with heat_3d on the paper dataset *****
NumPy - default - validation: 49352ms
DaCe CPU - fusion - first/validation: 387ms
DaCe CPU - fusion - validation: SUCCESS
DaCe CPU - fusion - median: 253ms
DaCe CPU - parallel - first/validation: 244ms
DaCe CPU - parallel - validation: SUCCESS
DaCe CPU - parallel - median: 247ms
DaCe CPU - auto_opt - first/validation: 260ms
DaCe CPU - auto_opt - validation: SUCCESS
DaCe CPU - auto_opt - median: 239ms
***** Testing NumPy with scattering_self_energies on the paper dataset *****
NumPy - default - first/validation: 2413ms
NumPy - default - median: 2426ms
***** Testing Numba with scattering_self_energies on the paper dataset *****
NumPy - default - validation: 2453ms
Numba - nopython-mode - first/validation: 1773ms
Numba - nopython-mode - validation: SUCCESS
Numba - nopython-mode - median: 349ms
Numba - nopython-mode-parallel-range - first/validation: 4124ms
Numba - nopython-mode-parallel-range - validation: SUCCESS
Numba - nopython-mode-parallel-range - median: 697ms
***** Testing CuPy with scattering_self_energies on the paper dataset *****
NumPy - default - validation: 2438ms
CuPy - default - first/validation: 32703ms
CuPy - default - validation: SUCCESS
CuPy - default - median: 31690ms
***** Testing Pythran with scattering_self_energies on the paper dataset *****
NumPy - default - validation: 2463ms
Pythran compilation time: 5206ms
Failed to load the Pythran implementation.
***** Testing DaCe CPU with scattering_self_energies on the paper dataset *****
NumPy - default - validation: 2443ms
DaCe CPU - fusion - first/validation: 15490ms
DaCe CPU - fusion - validation: SUCCESS
DaCe CPU - fusion - median: 15361ms
DaCe CPU - parallel - first/validation: 15532ms
DaCe CPU - parallel - validation: SUCCESS
DaCe CPU - parallel - median: 15572ms
DaCe CPU - auto_opt - first/validation: 15239ms
DaCe CPU - auto_opt - validation: SUCCESS
DaCe CPU - auto_opt - median: 14823ms
Benchmark JSON file contour_intergral.json could not be opened.
Benchmark JSON file contour_intergral.json could not be opened.
Benchmark JSON file contour_intergral.json could not be opened.
Benchmark JSON file contour_intergral.json could not be opened.
Benchmark JSON file contour_intergral.json could not be opened.
***** Testing NumPy with stockham_fft on the paper dataset *****
NumPy - default - first/validation: 388ms
NumPy - default - median: 371ms
***** Testing Numba with stockham_fft on the paper dataset *****
NumPy - default - validation: 387ms
Failed to execute the Numba - object-mode implementation.
reshape() supports contiguous array only
Numba - object-mode - validation: SUCCESS
Failed to execute the Numba - object-mode implementation.
reshape() supports contiguous array only
Failed to execute the Numba - object-mode-parallel implementation.
reshape() supports contiguous array only
Numba - object-mode-parallel - validation: SUCCESS
Failed to execute the Numba - object-mode-parallel implementation.
reshape() supports contiguous array only
Numba - nopython-mode - first/validation: 3450ms
Numba - nopython-mode - validation: SUCCESS
Numba - nopython-mode - median: 461ms
Numba - nopython-mode-parallel - first/validation: 23544ms
Numba - nopython-mode-parallel - validation: SUCCESS
Numba - nopython-mode-parallel - median: 18975ms
Numba - nopython-mode-parallel-range - first/validation: 5494ms
Numba - nopython-mode-parallel-range - validation: SUCCESS
Numba - nopython-mode-parallel-range - median: 710ms
***** Testing CuPy with stockham_fft on the paper dataset *****
NumPy - default - validation: 387ms
CuPy - default - first/validation: 740ms
CuPy - default - validation: SUCCESS
CuPy - default - median: 6ms
***** Testing Pythran with stockham_fft on the paper dataset *****
NumPy - default - validation: 385ms
Pythran compilation time: 4275ms
Failed to load the Pythran implementation.
***** Testing DaCe CPU with stockham_fft on the paper dataset *****
NumPy - default - validation: 386ms
Failed to compile DaCe cpu fusion implementation.
Compiler failure:
Consolidate compiler generated dependencies of target fusion
[ 25%] Building CXX object CMakeFiles/fusion.dir/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp.o
In file included from /home/ubuntu/.local/lib/python3.10/site-packages/dace/codegen/../runtime/include/dace/dace.h:14,
                 from /home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:2:
/home/ubuntu/.local/lib/python3.10/site-packages/dace/codegen/../runtime/include/dace/types.h: In constructor ‘dace::half::half(float)’:
/home/ubuntu/.local/lib/python3.10/site-packages/dace/codegen/../runtime/include/dace/types.h:92:28: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
   92 |             uint32_t x = *((uint32_t*)&f);
      |                           ~^~~~~~~~~~~~~~
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp: In function ‘void _TensorTranspose_sdfg_0_2_16(fusion_state_t*, dace::complex128*, dace::complex128*, long long int, long long int, long long int)’:
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:19:64: error: invalid types ‘dace::complex128* __restrict__ {aka std::complex<double>* __restrict__}[double]’ for array subscript
   19 |                             dace::complex128 _inp = _inp_tensor[(R*dace::math::pow(R, K - i - 1)*__i0 + dace::math::pow(R, K - i - 1)*__i1 + __i2)];
      |                                                                ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:27:40: error: invalid types ‘dace::complex128* __restrict__ {aka std::complex<double>* __restrict__}[double]’ for array subscript
   27 |                             _out_tensor[(dace::math::pow(R, i)*dace::math::pow(R, K - i - 1)*__i1 + dace::math::pow(R, K - i - 1)*__i0 + __i2)] = _out;
      |                                        ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:15:38: error: invalid controlling predicate
   15 |             for (auto __i0 = 0; __i0 < (dace::math::pow(R, i)); __i0 += 1) {
      |                                 ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp: In function ‘void _MatMult_gemm_sdfg_0_5_11(fusion_state_t*, dace::complex128*, dace::complex128*, dace::complex128*, long long int, long long int)’:
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:54:27: error: invalid types ‘dace::complex128* __restrict__ {aka std::complex<double>* __restrict__}[double]’ for array subscript
   54 |                         _c[(dace::math::pow(R, K - 1)*_o0 + _o1)] = out;
      |                           ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:70:54: error: invalid types ‘dace::complex128* __restrict__ {aka std::complex<double>* __restrict__}[double]’ for array subscript
   70 |                             dace::complex128 __b = _b[(dace::math::pow(R, K - 1)*__i2 + __i1)];
      |                                                      ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:78:107: error: invalid operands of types ‘dace::complex128* __restrict__’ {aka ‘std::complex<double>* __restrict__’} and ‘double’ to binary ‘operator+’
   78 |                             dace::wcr_fixed<dace::ReductionType::Sum, dace::complex128>::reduce_atomic(_c + (dace::math::pow(R, K - 1)*__i0 + __i1), __out);
      |                                                                                                        ~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                                                                                        |                                    |
      |                                                                                                        |                                    double
      |                                                                                                        dace::complex128* __restrict__ {aka std::complex<double>* __restrict__}
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp: In function ‘void __program_fusion_internal(fusion_state_t*, dace::complex128*, dace::complex128*, long long int, long long int)’:
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:92:54: warning: ‘new’ of type ‘unsigned int’ with extended alignment 64 [-Waligned-new=]
   92 |     i_coord = new unsigned int DACE_ALIGN(64)[(R * R)];
      |                                                      ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:92:54: note: uses ‘void* operator new [](std::size_t)’, which does not have an alignment parameter
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:92:54: note: use ‘-faligned-new’ to enable C++17 over-aligned new support
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:94:54: warning: ‘new’ of type ‘unsigned int’ with extended alignment 64 [-Waligned-new=]
   94 |     j_coord = new unsigned int DACE_ALIGN(64)[(R * R)];
      |                                                      ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:94:54: note: uses ‘void* operator new [](std::size_t)’, which does not have an alignment parameter
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:94:54: note: use ‘-faligned-new’ to enable C++17 over-aligned new support
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:96:58: warning: ignoring attributes applied to class type ‘dace::complex128’ {aka ‘std::complex<double>’} outside of definition [-Wattributes]
   96 |     dft_mat = new dace::complex128 DACE_ALIGN(64)[(R * R)];
      |                                                          ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:98:48: error: expression in new-declarator must have integral or enumeration type
   98 |     ii_coord = new unsigned int DACE_ALIGN(64)[(R*dace::math::pow(R, K))];
      |                                                ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:98:73: warning: ‘new’ of type ‘unsigned int’ with extended alignment 64 [-Waligned-new=]
   98 |     ii_coord = new unsigned int DACE_ALIGN(64)[(R*dace::math::pow(R, K))];
      |                                                                         ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:98:73: note: uses ‘void* operator new [](std::size_t)’, which does not have an alignment parameter
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:98:73: note: use ‘-faligned-new’ to enable C++17 over-aligned new support
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:100:48: error: expression in new-declarator must have integral or enumeration type
  100 |     jj_coord = new unsigned int DACE_ALIGN(64)[(R*dace::math::pow(R, K))];
      |                                                ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:100:73: warning: ‘new’ of type ‘unsigned int’ with extended alignment 64 [-Waligned-new=]
  100 |     jj_coord = new unsigned int DACE_ALIGN(64)[(R*dace::math::pow(R, K))];
      |                                                                         ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:100:73: note: uses ‘void* operator new [](std::size_t)’, which does not have an alignment parameter
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:100:73: note: use ‘-faligned-new’ to enable C++17 over-aligned new support
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:102:52: error: expression in new-declarator must have integral or enumeration type
  102 |     tmp_perm = new dace::complex128 DACE_ALIGN(64)[(dace::math::pow(R, K))];
      |                                                    ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:102:75: warning: ignoring attributes applied to class type ‘dace::complex128’ {aka ‘std::complex<double>’} outside of definition [-Wattributes]
  102 |     tmp_perm = new dace::complex128 DACE_ALIGN(64)[(dace::math::pow(R, K))];
      |                                                                           ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:104:45: error: expression in new-declarator must have integral or enumeration type
  104 |     D = new dace::complex128 DACE_ALIGN(64)[(dace::math::pow(R, K))];
      |                                             ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:104:68: warning: ignoring attributes applied to class type ‘dace::complex128’ {aka ‘std::complex<double>’} outside of definition [-Wattributes]
  104 |     D = new dace::complex128 DACE_ALIGN(64)[(dace::math::pow(R, K))];
      |                                                                    ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:106:47: error: expression in new-declarator must have integral or enumeration type
  106 |     tmp = new dace::complex128 DACE_ALIGN(64)[(dace::math::pow(R, K))];
      |                                               ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:106:70: warning: ignoring attributes applied to class type ‘dace::complex128’ {aka ‘std::complex<double>’} outside of definition [-Wattributes]
  106 |     tmp = new dace::complex128 DACE_ALIGN(64)[(dace::math::pow(R, K))];
      |                                                                      ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:181:38: error: unable to find numeric literal operator ‘operator""j’
  181 |                         __out = ((-0-6.283185307179586j) * dace::complex128(__in2));
      |                                      ^~~~~~~~~~~~~~~~~~
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:181:38: note: use ‘-fext-numeric-literals’ to enable more built-in suffixes
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:247:37: error: invalid types ‘unsigned int*[double]’ for array subscript
  247 |                             ii_coord[(dace::math::pow(R, K)*__i0 + __i1)] = __out;
      |                                     ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:274:37: error: invalid types ‘unsigned int*[double]’ for array subscript
  274 |                             jj_coord[(dace::math::pow(R, K)*__i0 + __i1)] = __out;
      |                                     ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:291:59: error: expression in new-declarator must have integral or enumeration type
  291 |             __tmp12 = new dace::complex128 DACE_ALIGN(64)[(R*dace::math::pow(R, i)*dace::math::pow(R, K - i - 1))];
      |                                                           ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:291:114: warning: ignoring attributes applied to class type ‘dace::complex128’ {aka ‘std::complex<double>’} outside of definition [-Wattributes]
  291 |             __tmp12 = new dace::complex128 DACE_ALIGN(64)[(R*dace::math::pow(R, i)*dace::math::pow(R, K - i - 1))];
      |                                                                                                                  ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:309:58: error: invalid types ‘unsigned int*[double]’ for array subscript
  309 |                             unsigned int __in2 = ii_coord[(dace::math::pow(R, K)*__i0 + __i1)];
      |                                                          ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:314:42: error: unable to find numeric literal operator ‘operator""j’
  314 |                             __out = ((-0-6.283185307179586j) * dace::complex128(__in2));
      |                                          ^~~~~~~~~~~~~~~~~~
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:314:42: note: use ‘-fext-numeric-literals’ to enable more built-in suffixes
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:322:58: error: invalid types ‘unsigned int*[double]’ for array subscript
  322 |                             unsigned int __in2 = jj_coord[(dace::math::pow(R, K)*__i0 + __i1)];
      |                                                          ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:353:38: error: invalid types ‘dace::complex128* {aka std::complex<double>*}[double]’ for array subscript
  353 |                             __tmp11_0[(dace::math::pow(R, i)*__i0 + __i1)] = __out;
      |                                      ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:379:60: error: expression in new-declarator must have integral or enumeration type
  379 |             tmp_twid = new dace::complex128 DACE_ALIGN(64)[(dace::math::pow(R, K))];
      |                                                            ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:379:83: warning: ignoring attributes applied to class type ‘dace::complex128’ {aka ‘std::complex<double>’} outside of definition [-Wattributes]
  379 |             tmp_twid = new dace::complex128 DACE_ALIGN(64)[(dace::math::pow(R, K))];
      |                                                                                   ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:383:59: error: expression in new-declarator must have integral or enumeration type
  383 |             __tmp18 = new dace::complex128 DACE_ALIGN(64)[(R*dace::math::pow(R, K - 1))];
      |                                                           ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:383:88: warning: ignoring attributes applied to class type ‘dace::complex128’ {aka ‘std::complex<double>’} outside of definition [-Wattributes]
  383 |             __tmp18 = new dace::complex128 DACE_ALIGN(64)[(R*dace::math::pow(R, K - 1))];
      |                                                                                        ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp:389:42: error: invalid controlling predicate
  389 |                 for (auto __i0 = 0; __i0 < (dace::math::pow(R, K)); __i0 += 1) {
      |                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
gmake[2]: *** [CMakeFiles/fusion.dir/build.make:76: CMakeFiles/fusion.dir/home/ubuntu/npbgpu/npb-lrz/.dacecache/fusion/src/cpu/fusion.cpp.o] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:85: CMakeFiles/fusion.dir/all] Error 2
gmake: *** [Makefile:91: all] Error 2

Traceback
Failed to compile DaCe cpu parallel implementation.
Compiler failure:
Consolidate compiler generated dependencies of target parallel
[ 25%] Building CXX object CMakeFiles/parallel.dir/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp.o
In file included from /home/ubuntu/.local/lib/python3.10/site-packages/dace/codegen/../runtime/include/dace/dace.h:14,
                 from /home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:2:
/home/ubuntu/.local/lib/python3.10/site-packages/dace/codegen/../runtime/include/dace/types.h: In constructor ‘dace::half::half(float)’:
/home/ubuntu/.local/lib/python3.10/site-packages/dace/codegen/../runtime/include/dace/types.h:92:28: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
   92 |             uint32_t x = *((uint32_t*)&f);
      |                           ~^~~~~~~~~~~~~~
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp: In function ‘void _TensorTranspose_sdfg_0_0_16(parallel_state_t*, dace::complex128*, dace::complex128*, long long int, long long int, long long int)’:
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:19:64: error: invalid types ‘dace::complex128* __restrict__ {aka std::complex<double>* __restrict__}[double]’ for array subscript
   19 |                             dace::complex128 _inp = _inp_tensor[(R*dace::math::pow(R, K - i - 1)*__i0 + dace::math::pow(R, K - i - 1)*__i1 + __i2)];
      |                                                                ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:27:40: error: invalid types ‘dace::complex128* __restrict__ {aka std::complex<double>* __restrict__}[double]’ for array subscript
   27 |                             _out_tensor[(dace::math::pow(R, i)*dace::math::pow(R, K - i - 1)*__i1 + dace::math::pow(R, K - i - 1)*__i0 + __i2)] = _out;
      |                                        ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:15:38: error: invalid controlling predicate
   15 |             for (auto __i0 = 0; __i0 < (dace::math::pow(R, i)); __i0 += 1) {
      |                                 ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp: In function ‘void _MatMult_gemm_sdfg_0_3_11(parallel_state_t*, dace::complex128*, dace::complex128*, dace::complex128*, long long int, long long int)’:
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:54:27: error: invalid types ‘dace::complex128* __restrict__ {aka std::complex<double>* __restrict__}[double]’ for array subscript
   54 |                         _c[(dace::math::pow(R, K - 1)*_o0 + _o1)] = out;
      |                           ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:70:54: error: invalid types ‘dace::complex128* __restrict__ {aka std::complex<double>* __restrict__}[double]’ for array subscript
   70 |                             dace::complex128 __b = _b[(dace::math::pow(R, K - 1)*__i2 + __i1)];
      |                                                      ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:78:107: error: invalid operands of types ‘dace::complex128* __restrict__’ {aka ‘std::complex<double>* __restrict__’} and ‘double’ to binary ‘operator+’
   78 |                             dace::wcr_fixed<dace::ReductionType::Sum, dace::complex128>::reduce_atomic(_c + (dace::math::pow(R, K - 1)*__i0 + __i1), __out);
      |                                                                                                        ~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                                                                                        |                                    |
      |                                                                                                        |                                    double
      |                                                                                                        dace::complex128* __restrict__ {aka std::complex<double>* __restrict__}
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp: In function ‘void __program_parallel_internal(parallel_state_t*, dace::complex128*, dace::complex128*, long long int, long long int)’:
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:92:58: warning: ignoring attributes applied to class type ‘dace::complex128’ {aka ‘std::complex<double>’} outside of definition [-Wattributes]
   92 |     dft_mat = new dace::complex128 DACE_ALIGN(64)[(R * R)];
      |                                                          ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:94:48: error: expression in new-declarator must have integral or enumeration type
   94 |     ii_coord = new unsigned int DACE_ALIGN(64)[(R*dace::math::pow(R, K))];
      |                                                ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:94:73: warning: ‘new’ of type ‘unsigned int’ with extended alignment 64 [-Waligned-new=]
   94 |     ii_coord = new unsigned int DACE_ALIGN(64)[(R*dace::math::pow(R, K))];
      |                                                                         ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:94:73: note: uses ‘void* operator new [](std::size_t)’, which does not have an alignment parameter
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:94:73: note: use ‘-faligned-new’ to enable C++17 over-aligned new support
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:96:48: error: expression in new-declarator must have integral or enumeration type
   96 |     jj_coord = new unsigned int DACE_ALIGN(64)[(R*dace::math::pow(R, K))];
      |                                                ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:96:73: warning: ‘new’ of type ‘unsigned int’ with extended alignment 64 [-Waligned-new=]
   96 |     jj_coord = new unsigned int DACE_ALIGN(64)[(R*dace::math::pow(R, K))];
      |                                                                         ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:96:73: note: uses ‘void* operator new [](std::size_t)’, which does not have an alignment parameter
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:96:73: note: use ‘-faligned-new’ to enable C++17 over-aligned new support
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:98:52: error: expression in new-declarator must have integral or enumeration type
   98 |     tmp_perm = new dace::complex128 DACE_ALIGN(64)[(dace::math::pow(R, K))];
      |                                                    ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:98:75: warning: ignoring attributes applied to class type ‘dace::complex128’ {aka ‘std::complex<double>’} outside of definition [-Wattributes]
   98 |     tmp_perm = new dace::complex128 DACE_ALIGN(64)[(dace::math::pow(R, K))];
      |                                                                           ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:100:45: error: expression in new-declarator must have integral or enumeration type
  100 |     D = new dace::complex128 DACE_ALIGN(64)[(dace::math::pow(R, K))];
      |                                             ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:100:68: warning: ignoring attributes applied to class type ‘dace::complex128’ {aka ‘std::complex<double>’} outside of definition [-Wattributes]
  100 |     D = new dace::complex128 DACE_ALIGN(64)[(dace::math::pow(R, K))];
      |                                                                    ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:102:47: error: expression in new-declarator must have integral or enumeration type
  102 |     tmp = new dace::complex128 DACE_ALIGN(64)[(dace::math::pow(R, K))];
      |                                               ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:102:70: warning: ignoring attributes applied to class type ‘dace::complex128’ {aka ‘std::complex<double>’} outside of definition [-Wattributes]
  102 |     tmp = new dace::complex128 DACE_ALIGN(64)[(dace::math::pow(R, K))];
      |                                                                      ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:108:58: warning: ‘new’ of type ‘unsigned int’ with extended alignment 64 [-Waligned-new=]
  108 |         i_coord = new unsigned int DACE_ALIGN(64)[(R * R)];
      |                                                          ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:108:58: note: uses ‘void* operator new [](std::size_t)’, which does not have an alignment parameter
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:108:58: note: use ‘-faligned-new’ to enable C++17 over-aligned new support
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:110:58: warning: ‘new’ of type ‘unsigned int’ with extended alignment 64 [-Waligned-new=]
  110 |         j_coord = new unsigned int DACE_ALIGN(64)[(R * R)];
      |                                                          ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:110:58: note: uses ‘void* operator new [](std::size_t)’, which does not have an alignment parameter
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:110:58: note: use ‘-faligned-new’ to enable C++17 over-aligned new support
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:165:38: error: unable to find numeric literal operator ‘operator""j’
  165 |                         __out = ((-0-6.283185307179586j) * dace::complex128(__in2));
      |                                      ^~~~~~~~~~~~~~~~~~
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:165:38: note: use ‘-fext-numeric-literals’ to enable more built-in suffixes
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:226:41: error: invalid types ‘unsigned int*[double]’ for array subscript
  226 |                                 ii_coord[(dace::math::pow(R, K)*__i0 + __i1)] = __out;
      |                                         ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:247:41: error: invalid types ‘unsigned int*[double]’ for array subscript
  247 |                                 jj_coord[(dace::math::pow(R, K)*__i0 + __i1)] = __out;
      |                                         ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:235:32: error: invalid controlling predicate
  235 |             for (auto j = 0; j < (dace::math::pow(R, K)); j += 1) {
      |                              ~~^~~~~~~~~~~~~~~~~~~~~~~~~
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:265:59: error: expression in new-declarator must have integral or enumeration type
  265 |             __tmp12 = new dace::complex128 DACE_ALIGN(64)[(R*dace::math::pow(R, i)*dace::math::pow(R, K - i - 1))];
      |                                                           ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:265:114: warning: ignoring attributes applied to class type ‘dace::complex128’ {aka ‘std::complex<double>’} outside of definition [-Wattributes]
  265 |             __tmp12 = new dace::complex128 DACE_ALIGN(64)[(R*dace::math::pow(R, i)*dace::math::pow(R, K - i - 1))];
      |                                                                                                                  ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:283:58: error: invalid types ‘unsigned int*[double]’ for array subscript
  283 |                             unsigned int __in2 = ii_coord[(dace::math::pow(R, K)*__i0 + __i1)];
      |                                                          ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:288:42: error: unable to find numeric literal operator ‘operator""j’
  288 |                             __out = ((-0-6.283185307179586j) * dace::complex128(__in2));
      |                                          ^~~~~~~~~~~~~~~~~~
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:288:42: note: use ‘-fext-numeric-literals’ to enable more built-in suffixes
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:296:58: error: invalid types ‘unsigned int*[double]’ for array subscript
  296 |                             unsigned int __in2 = jj_coord[(dace::math::pow(R, K)*__i0 + __i1)];
      |                                                          ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:327:38: error: invalid types ‘dace::complex128* {aka std::complex<double>*}[double]’ for array subscript
  327 |                             __tmp11_0[(dace::math::pow(R, i)*__i0 + __i1)] = __out;
      |                                      ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:353:60: error: expression in new-declarator must have integral or enumeration type
  353 |             tmp_twid = new dace::complex128 DACE_ALIGN(64)[(dace::math::pow(R, K))];
      |                                                            ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:353:83: warning: ignoring attributes applied to class type ‘dace::complex128’ {aka ‘std::complex<double>’} outside of definition [-Wattributes]
  353 |             tmp_twid = new dace::complex128 DACE_ALIGN(64)[(dace::math::pow(R, K))];
      |                                                                                   ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:357:59: error: expression in new-declarator must have integral or enumeration type
  357 |             __tmp18 = new dace::complex128 DACE_ALIGN(64)[(R*dace::math::pow(R, K - 1))];
      |                                                           ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:357:88: warning: ignoring attributes applied to class type ‘dace::complex128’ {aka ‘std::complex<double>’} outside of definition [-Wattributes]
  357 |             __tmp18 = new dace::complex128 DACE_ALIGN(64)[(R*dace::math::pow(R, K - 1))];
      |                                                                                        ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp:363:42: error: invalid controlling predicate
  363 |                 for (auto __i0 = 0; __i0 < (dace::math::pow(R, K)); __i0 += 1) {
      |                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
gmake[2]: *** [CMakeFiles/parallel.dir/build.make:76: CMakeFiles/parallel.dir/home/ubuntu/npbgpu/npb-lrz/.dacecache/parallel/src/cpu/parallel.cpp.o] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:85: CMakeFiles/parallel.dir/all] Error 2
gmake: *** [Makefile:91: all] Error 2

Traceback
Failed to compile DaCe cpu auto_opt implementation.
Compiler failure:
Consolidate compiler generated dependencies of target auto_opt
[ 25%] Building CXX object CMakeFiles/auto_opt.dir/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp.o
In file included from /home/ubuntu/.local/lib/python3.10/site-packages/dace/codegen/../runtime/include/dace/dace.h:14,
                 from /home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:2:
/home/ubuntu/.local/lib/python3.10/site-packages/dace/codegen/../runtime/include/dace/types.h: In constructor ‘dace::half::half(float)’:
/home/ubuntu/.local/lib/python3.10/site-packages/dace/codegen/../runtime/include/dace/types.h:92:28: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]
   92 |             uint32_t x = *((uint32_t*)&f);
      |                           ~^~~~~~~~~~~~~~
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp: In function ‘void _TensorTranspose_sdfg_0_0_16(auto_opt_state_t*, dace::complex128*, dace::complex128*, long long int, long long int, long long int)’:
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:27:64: error: invalid types ‘dace::complex128* __restrict__ {aka std::complex<double>* __restrict__}[double]’ for array subscript
   27 |                             dace::complex128 _inp = _inp_tensor[(R*dace::math::pow(R, K - i - 1)*__i0 + dace::math::pow(R, K - i - 1)*__i1 + __i2)];
      |                                                                ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:35:40: error: invalid types ‘dace::complex128* __restrict__ {aka std::complex<double>* __restrict__}[double]’ for array subscript
   35 |                             _out_tensor[(dace::math::pow(R, i)*dace::math::pow(R, K - i - 1)*__i1 + dace::math::pow(R, K - i - 1)*__i0 + __i2)] = _out;
      |                                        ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:23:38: error: invalid controlling predicate
   23 |             for (auto __i0 = 0; __i0 < (dace::math::pow(R, i)); __i0 += 1) {
      |                                 ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp: In function ‘void _MatMult_gemm_sdfg_0_3_11(auto_opt_state_t*, dace::complex128*, dace::complex128*, dace::complex128*, long long int, long long int)’:
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:62:27: error: invalid types ‘dace::complex128* __restrict__ {aka std::complex<double>* __restrict__}[double]’ for array subscript
   62 |                         _c[(dace::math::pow(R, K - 1)*_o0 + _o1)] = out;
      |                           ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:78:54: error: invalid types ‘dace::complex128* __restrict__ {aka std::complex<double>* __restrict__}[double]’ for array subscript
   78 |                             dace::complex128 __b = _b[(dace::math::pow(R, K - 1)*__i2 + __i1)];
      |                                                      ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:86:107: error: invalid operands of types ‘dace::complex128* __restrict__’ {aka ‘std::complex<double>* __restrict__’} and ‘double’ to binary ‘operator+’
   86 |                             dace::wcr_fixed<dace::ReductionType::Sum, dace::complex128>::reduce_atomic(_c + (dace::math::pow(R, K - 1)*__i0 + __i1), __out);
      |                                                                                                        ~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                                                                                        |                                    |
      |                                                                                                        |                                    double
      |                                                                                                        dace::complex128* __restrict__ {aka std::complex<double>* __restrict__}
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp: In function ‘void __program_auto_opt_internal(auto_opt_state_t*, dace::complex128*, dace::complex128*, long long int, long long int)’:
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:146:38: error: unable to find numeric literal operator ‘operator""j’
  146 |                         __out = ((-0-6.283185307179586j) * dace::complex128(__in2));
      |                                      ^~~~~~~~~~~~~~~~~~
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:146:38: note: use ‘-fext-numeric-literals’ to enable more built-in suffixes
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:202:46: error: invalid types ‘unsigned int* __restrict__[double]’ for array subscript
  202 |                         __state->__0_ii_coord[(dace::math::pow(R, K)*i_0 + __i1)] = __out;
      |                                              ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:219:46: error: invalid types ‘unsigned int* __restrict__[double]’ for array subscript
  219 |                         __state->__0_jj_coord[(dace::math::pow(R, K)*__i0 + j)] = __out;
      |                                              ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:209:32: error: invalid controlling predicate
  209 |             for (auto j = 0; j < (dace::math::pow(R, K)); j += 1) {
      |                              ~~^~~~~~~~~~~~~~~~~~~~~~~~~
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:233:59: error: expression in new-declarator must have integral or enumeration type
  233 |             __tmp12 = new dace::complex128 DACE_ALIGN(64)[(R*dace::math::pow(R, i)*dace::math::pow(R, K - i - 1))];
      |                                                           ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:233:114: warning: ignoring attributes applied to class type ‘dace::complex128’ {aka ‘std::complex<double>’} outside of definition [-Wattributes]
  233 |             __tmp12 = new dace::complex128 DACE_ALIGN(64)[(R*dace::math::pow(R, i)*dace::math::pow(R, K - i - 1))];
      |                                                                                                                  ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:251:71: error: invalid types ‘unsigned int* __restrict__[double]’ for array subscript
  251 |                             unsigned int __in2 = __state->__0_ii_coord[(dace::math::pow(R, K)*__i0 + __i1)];
      |                                                                       ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:256:42: error: unable to find numeric literal operator ‘operator""j’
  256 |                             __out = ((-0-6.283185307179586j) * dace::complex128(__in2));
      |                                          ^~~~~~~~~~~~~~~~~~
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:256:42: note: use ‘-fext-numeric-literals’ to enable more built-in suffixes
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:264:71: error: invalid types ‘unsigned int* __restrict__[double]’ for array subscript
  264 |                             unsigned int __in2 = __state->__0_jj_coord[(dace::math::pow(R, K)*__i0 + __i1)];
      |                                                                       ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:295:38: error: invalid types ‘dace::complex128* {aka std::complex<double>*}[double]’ for array subscript
  295 |                             __tmp11_0[(dace::math::pow(R, i)*__i0 + __i1)] = __out;
      |                                      ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:327:42: error: invalid controlling predicate
  327 |                 for (auto __i0 = 0; __i0 < (dace::math::pow(R, K)); __i0 += 1) {
      |                                     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp: In function ‘auto_opt_state_t* __dace_init_auto_opt(long long int, long long int)’:
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:364:64: error: expression in new-declarator must have integral or enumeration type
  364 |     __state->__0___tmp18 = new dace::complex128 DACE_ALIGN(64)[(R*dace::math::pow(R, K - 1))];
      |                                                                ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:364:93: warning: ignoring attributes applied to class type ‘dace::complex128’ {aka ‘std::complex<double>’} outside of definition [-Wattributes]
  364 |     __state->__0___tmp18 = new dace::complex128 DACE_ALIGN(64)[(R*dace::math::pow(R, K - 1))];
      |                                                                                             ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:365:67: warning: ‘new’ of type ‘unsigned int’ with extended alignment 64 [-Waligned-new=]
  365 |     __state->__0_j_coord = new unsigned int DACE_ALIGN(64)[(R * R)];
      |                                                                   ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:365:67: note: uses ‘void* operator new [](std::size_t)’, which does not have an alignment parameter
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:365:67: note: use ‘-faligned-new’ to enable C++17 over-aligned new support
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:366:71: warning: ignoring attributes applied to class type ‘dace::complex128’ {aka ‘std::complex<double>’} outside of definition [-Wattributes]
  366 |     __state->__0_dft_mat = new dace::complex128 DACE_ALIGN(64)[(R * R)];
      |                                                                       ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:367:61: error: expression in new-declarator must have integral or enumeration type
  367 |     __state->__0_ii_coord = new unsigned int DACE_ALIGN(64)[(R*dace::math::pow(R, K))];
      |                                                             ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:367:86: warning: ‘new’ of type ‘unsigned int’ with extended alignment 64 [-Waligned-new=]
  367 |     __state->__0_ii_coord = new unsigned int DACE_ALIGN(64)[(R*dace::math::pow(R, K))];
      |                                                                                      ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:367:86: note: uses ‘void* operator new [](std::size_t)’, which does not have an alignment parameter
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:367:86: note: use ‘-faligned-new’ to enable C++17 over-aligned new support
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:368:61: error: expression in new-declarator must have integral or enumeration type
  368 |     __state->__0_jj_coord = new unsigned int DACE_ALIGN(64)[(R*dace::math::pow(R, K))];
      |                                                             ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:368:86: warning: ‘new’ of type ‘unsigned int’ with extended alignment 64 [-Waligned-new=]
  368 |     __state->__0_jj_coord = new unsigned int DACE_ALIGN(64)[(R*dace::math::pow(R, K))];
      |                                                                                      ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:368:86: note: uses ‘void* operator new [](std::size_t)’, which does not have an alignment parameter
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:368:86: note: use ‘-faligned-new’ to enable C++17 over-aligned new support
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:369:65: error: expression in new-declarator must have integral or enumeration type
  369 |     __state->__0_tmp_perm = new dace::complex128 DACE_ALIGN(64)[(dace::math::pow(R, K))];
      |                                                                 ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:369:88: warning: ignoring attributes applied to class type ‘dace::complex128’ {aka ‘std::complex<double>’} outside of definition [-Wattributes]
  369 |     __state->__0_tmp_perm = new dace::complex128 DACE_ALIGN(64)[(dace::math::pow(R, K))];
      |                                                                                        ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:370:58: error: expression in new-declarator must have integral or enumeration type
  370 |     __state->__0_D = new dace::complex128 DACE_ALIGN(64)[(dace::math::pow(R, K))];
      |                                                          ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:370:81: warning: ignoring attributes applied to class type ‘dace::complex128’ {aka ‘std::complex<double>’} outside of definition [-Wattributes]
  370 |     __state->__0_D = new dace::complex128 DACE_ALIGN(64)[(dace::math::pow(R, K))];
      |                                                                                 ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:371:60: error: expression in new-declarator must have integral or enumeration type
  371 |     __state->__0_tmp = new dace::complex128 DACE_ALIGN(64)[(dace::math::pow(R, K))];
      |                                                            ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:371:83: warning: ignoring attributes applied to class type ‘dace::complex128’ {aka ‘std::complex<double>’} outside of definition [-Wattributes]
  371 |     __state->__0_tmp = new dace::complex128 DACE_ALIGN(64)[(dace::math::pow(R, K))];
      |                                                                                   ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:372:65: error: expression in new-declarator must have integral or enumeration type
  372 |     __state->__0_tmp_twid = new dace::complex128 DACE_ALIGN(64)[(dace::math::pow(R, K))];
      |                                                                 ^
/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp:372:88: warning: ignoring attributes applied to class type ‘dace::complex128’ {aka ‘std::complex<double>’} outside of definition [-Wattributes]
  372 |     __state->__0_tmp_twid = new dace::complex128 DACE_ALIGN(64)[(dace::math::pow(R, K))];
      |                                                                                        ^
gmake[2]: *** [CMakeFiles/auto_opt.dir/build.make:76: CMakeFiles/auto_opt.dir/home/ubuntu/npbgpu/npb-lrz/.dacecache/auto_opt/src/cpu/auto_opt.cpp.o] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:85: CMakeFiles/auto_opt.dir/all] Error 2
gmake: *** [Makefile:91: all] Error 2

Traceback
***** Testing NumPy with trisolv on the paper dataset *****
NumPy - default - first/validation: 162ms
NumPy - default - median: 136ms
***** Testing Numba with trisolv on the paper dataset *****
NumPy - default - validation: 157ms
Numba - nopython-mode - first/validation: 544ms
Numba - nopython-mode - validation: SUCCESS
Numba - nopython-mode - median: 88ms
Numba - nopython-mode-parallel - first/validation: 304ms
Numba - nopython-mode-parallel - validation: SUCCESS
Numba - nopython-mode-parallel - median: 87ms
***** Testing CuPy with trisolv on the paper dataset *****
NumPy - default - validation: 157ms
CuPy - default - first/validation: 1110ms
CuPy - default - validation: SUCCESS
CuPy - default - median: 991ms
***** Testing Pythran with trisolv on the paper dataset *****
NumPy - default - validation: 158ms
Pythran compilation time: 3618ms
Pythran - default - first/validation: 103ms
Pythran - default - validation: SUCCESS
Pythran - default - median: 103ms
***** Testing DaCe CPU with trisolv on the paper dataset *****
NumPy - default - validation: 154ms
DaCe CPU - fusion - first/validation: 8479ms
DaCe CPU - fusion - validation: SUCCESS
DaCe CPU - fusion - median: 8512ms
DaCe CPU - parallel - first/validation: 8504ms
DaCe CPU - parallel - validation: SUCCESS
DaCe CPU - parallel - median: 8106ms
DaCe CPU - auto_opt - first/validation: 8250ms
DaCe CPU - auto_opt - validation: SUCCESS
DaCe CPU - auto_opt - median: 8138ms
***** Testing NumPy with lu on the paper dataset *****
NumPy - default - first/validation: 11036ms
NumPy - default - median: 11091ms
***** Testing Numba with lu on the paper dataset *****
NumPy - default - validation: 11178ms
Numba - nopython-mode - first/validation: 5501ms
Numba - nopython-mode - validation: SUCCESS
Numba - nopython-mode - median: 4873ms
Numba - nopython-mode-parallel - first/validation: 13140ms
Numba - nopython-mode-parallel - validation: SUCCESS
Numba - nopython-mode-parallel - median: 11101ms
***** Testing CuPy with lu on the paper dataset *****
NumPy - default - validation: 11074ms
Implementation "default" timed out.
***** Testing Pythran with lu on the paper dataset *****
NumPy - default - validation: 11035ms
Pythran compilation time: 3381ms
Pythran - default - first/validation: 4141ms
Pythran - default - validation: SUCCESS
Pythran - default - median: 4132ms
***** Testing DaCe CPU with lu on the paper dataset *****
NumPy - default - validation: 11074ms
Implementation "fusion" timed out.
Implementation "parallel" timed out.
Implementation "auto_opt" timed out.
